{"ast":null,"code":"var _jsxFileName = \"/Users/jessicapointing/Documents/qr-code-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [qrCodeData, setQRCodeData] = useState('');\n  const generateQRCode = () => {\n    if (amount) {\n      // Generate the QR code data based on the amount input\n      const qrCodeData = `Amount: ${amount}`;\n      setQRCodeData(qrCodeData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Enter the amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQRCode,\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrCodeData,\n        size: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vQKWZ08vO2Fw7+rHKGUWj2RylVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","App","_s","amount","setAmount","qrCodeData","setQRCodeData","generateQRCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","size","_c","$RefreshReg$"],"sources":["/Users/jessicapointing/Documents/qr-code-generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\n\nfunction App() {\n  const [amount, setAmount] = useState('');\n  const [qrCodeData, setQRCodeData] = useState('');\n\n  const generateQRCode = () => {\n    if (amount) {\n      // Generate the QR code data based on the amount input\n      const qrCodeData = `Amount: ${amount}`;\n      setQRCodeData(qrCodeData);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Generator</h1>\n      <div>\n        <label htmlFor=\"amount\">Enter the amount:</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <button onClick={generateQRCode}>Generate QR Code</button>\n      </div>\n      {qrCodeData && (\n        <div>\n          <h2>QR Code:</h2>\n          <QRCode value={qrCodeData} size={200} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIJ,MAAM,EAAE;MACV;MACA,MAAME,UAAU,GAAI,WAAUF,MAAO,EAAC;MACtCG,aAAa,CAACD,UAAU,CAAC;IAC3B;EACF,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAAS,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bb,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAOc,OAAO,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDb,OAAA;QACEe,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAEd,MAAO;QACde,QAAQ,EAAGC,CAAC,IAAKf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFb,OAAA;QAAQqB,OAAO,EAAEd,cAAe;QAAAE,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACLR,UAAU,iBACTL,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBb,OAAA,CAACF,MAAM;QAACmB,KAAK,EAAEZ,UAAW;QAACiB,IAAI,EAAE;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CAjCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}